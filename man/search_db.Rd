% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_db.R
\name{search_db}
\alias{search_db}
\title{Perform global alignment pairwise identity search using VSEARCH and type strain database of interest.}
\usage{
search_db(
  query.path = NULL,
  uc.out = "VSEARCH_output.uc",
  b6.out = "VSEARCH_output.b6o",
  path = getwd(),
  quick_search = FALSE,
  db = NULL,
  db_path = NULL,
  vsearch_path = NULL,
  keep_temp_files = FALSE,
  iddef = 2
)
}
\arguments{
\item{query.path}{Path of FASTA-formatted query sequence file.}

\item{uc.out}{Path of UC-formatted results output table.}

\item{b6.out}{Path of blast6-formatted results output table.}

\item{path}{Working path directory (Default is set to current working directory via 'getwd()'}

\item{quick_search}{(Default=FALSE) Whether or not to perform a comprehensive database search (i.e. optimal global alignment).
If TRUE, performs quick search equivalent to setting VSEARCH parameters "--maxaccepts 100 --maxrejects 100".
If FALSE, performs comprehensive search equivalent to setting VSEARCH parameters "--maxaccepts 0 --maxrejects 0"
Note: This option is provided for convenience and rough approximation of taxonomy only, set to FALSE for accurate \% pairwise identity results.}

\item{db}{Optional: Select any of the standard database option(s) including "16S" (for searching against the NCBI Refseq targeted loci 16S rRNA database),
"ITS" (for searching against the NCBI Refseq targeted loci ITS  database. For combined databases in cases where input sequences are dervied from
bacteria and fungi, select "16S|ITS". Setting to anything other than db=NULL or db="custom" causes 'db.path' parameter to be ignored.}

\item{vsearch_path}{Path of VSEARCH software if manually downloaded in a custom directory. If NULL (Default), will attempt automatic download.}

\item{keep_temp_files}{Toggle (TRUE/FALSE). If TRUE, temporary .uc and .b6o output files are kept from VSEARCH --uc and --blast6out commands, respectively. If FALSE, temporary files are removed.}

\item{iddef}{Set pairwise identity definition as per VSEARCH definitions (Default=2, and is recommended for highest taxonomic accuracy)
(0) CD-HIT definition: (matching columns) / (shortest sequence length).
(1) Edit distance: (matching columns) / (alignment length).
(2) Edit distance excluding terminal gaps (default definition).
(3) Marine Biological Lab definition counting each gap opening (internal or terminal) as a single mismatch, whether or not the gap was extended: 1.0- ((mismatches + gap openings)/(longest sequence length)).
(4) BLAST definition, equivalent to --iddef 1 for global pairwise alignments.}

\item{db.path}{Path of FASTA-formatted database sequence file. Ignored if 'db' parameter is set to anything other than "custom"}
}
\value{
Returns a dataframe matching the UC-formatted output table from VSEARCH. Query sequences are automatically added to the final column.
Summary of column information. See VSEARCH documentation for more details.
\itemize{
\item V1 = Record type of hit (H) or no hit (N)
\item V2 = Ordinal number of the target sequence (based on input order, starting from zero). Set to '*' for N.
\item V3 = Sequence length. Set to '*' for N.
\item V4 = Percentage of similarity with the target sequence. Set to '*' for N.
\item V5 = Match orientation + or -. . Set to '.' for N.
\item V6 = Not used, always set to zero for H, or '*' for N.
\item V7 = Not used, always set to zero for H, or '*' for N.
\item V8 = Compact representation of the pairwise alignment using the CIGAR format (Compact Idiosyncratic Gapped Alignment Report): M (match/mismatch), D (deletion) and I (insertion). The equal sign '=' indicates that the query is identical to the centroid sequence. Set to '*' for N.
\item V9 = Label of the query sequence. Equivalent to 'filename' slot of isolateR class objects (e.g. isoQC, isoTAX, isoLIB).
\item V10 = Label of the target centroid sequence. Set to '*' for N.
}
}
\description{
Performs global alignment between FASTA-formatted query sequences and the specified database of interest.
Uses the Needleman-Wunsch algorithm by wrapping the --usearch_global command implemented in VSEARCH.
}
\examples{
#Set path to directory containing example .ab1 files
fpath1 <- system.file("extdata/abif_examples/rocket_salad", package = "isolateR")

#Run isoQC function with default settings
isoQC.S4 <- isoQC(input=fpath1)

#Set path of CSV output file containing PASS sequences from isoQC step
fasta.path <- "01_isoQC_trimmed_sequences_PASS.fasta"

#Set paths
output.path <- file.path(fpath1, "isolateR_output")

#Run search_db function
uc.df <- search_db(query.path=fasta.path, path=output.path, quick_search=TRUE, db="16S")

#Inspect results
uc.df[1:10,1:10]
}
\seealso{
\code{\link{isoTAX}}
}
